{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";export default function QuizApp(){const[quiz,setQuiz]=useState(null);const[answers,setAnswers]=useState({});const[studentNumber,setStudentNumber]=useState(\"\");const[firstNameEnglish,setFirstNameEnglish]=useState(\"\");const[lastNameEnglish,setLastNameEnglish]=useState(\"\");const[courseNumber,setCourseNumber]=useState(\"\");const[quizId,setQuizId]=useState(null);const[submitted,setSubmitted]=useState(false);const[error,setError]=useState(null);const[isStudentIdEntered,setIsStudentIdEntered]=useState(false);const[score,setScore]=useState(null);const[total,setTotal]=useState(null);const[timeLeft,setTimeLeft]=useState(null);useEffect(()=>{const urlParams=new URLSearchParams(window.location.search);const quizIdFromUrl=urlParams.get(\"quizId\");const courseNum=urlParams.get(\"courseNumber\");if(quizIdFromUrl&&courseNum){setQuizId(quizIdFromUrl);setCourseNumber(courseNum);}},[]);const fetchQuiz=async()=>{if(!studentNumber||!firstNameEnglish||!lastNameEnglish||!courseNumber||!quizId){setError(\"Please enter your student number, first name, last name, and ensure quiz parameters are provided.\");return;}const url=`https://quiz-app-backend-jp.fly.dev/quiz/${parseInt(quizId)}?student_number=${studentNumber}&course_number=${courseNumber}`;try{const response=await fetch(url);if(!response.ok){const errorText=await response.text();throw new Error(`HTTP error! status: ${response.status}, details: ${errorText}`);}const data=await response.json();if(data.message===\"You have already taken this quiz.\"){setSubmitted(true);setScore(data.score);setTotal(data.total);setIsStudentIdEntered(true);setQuiz({title:\"Quiz Already Taken\"});return;}setQuiz(data);setIsStudentIdEntered(true);setError(null);const hasAudioOrVideo=data.questions.some(q=>q.audio_url||q.video_url);const initialTime=hasAudioOrVideo?10*60:5*60;setTimeLeft(initialTime);}catch(err){console.error(\"Error fetching quiz:\",err);setError(err.message);}};useEffect(()=>{if(timeLeft===null||submitted)return;if(timeLeft<=0){submitQuiz();return;}const timerId=setInterval(()=>setTimeLeft(prev=>prev-1),1000);return()=>clearInterval(timerId);},[timeLeft,submitted]);const handleTextInput=(questionId,value)=>{console.log(`Q${questionId} - Text Input:`,value);setAnswers(prev=>({...prev,[questionId]:value}));};const handleCheckbox=(questionId,value)=>{const cleanValue=value.includes(\": \")?value.split(\": \")[1].trim():value.trim();console.log(`Q${questionId} - Checkbox: Raw=${value}, Clean=${cleanValue}`);setAnswers(prev=>{const currentAnswers=Array.isArray(prev[questionId])?prev[questionId]:[];if(currentAnswers.includes(cleanValue)){return{...prev,[questionId]:currentAnswers.filter(ans=>ans!==cleanValue)};}else{return{...prev,[questionId]:[...currentAnswers,cleanValue]};}});};const submitQuiz=async()=>{if(!studentNumber||!firstNameEnglish||!lastNameEnglish){setError(\"Student number, first name, and last name are required.\");return;}const submitUrl=`https://quiz-app-backend-jp.fly.dev/submit_quiz/${parseInt(quizId)}`;const submission={student_number:studentNumber,first_name_english:firstNameEnglish,last_name_english:lastNameEnglish,course_number:courseNumber,answers:Object.keys(answers).reduce((acc,qId)=>{acc[qId]=answers[qId];return acc;},{})};try{const response=await axios.post(submitUrl,submission);setScore(response.data.score);setTotal(response.data.total);setSubmitted(true);setError(null);}catch(err){var _err$response,_err$response$data;console.error(\"Error submitting quiz:\",err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.detail)||err.message);}};const formatTime=seconds=>{const minutes=Math.floor(seconds/60);const secs=seconds%60;return`${minutes.toString().padStart(2,\"0\")}:${secs.toString().padStart(2,\"0\")}`;};const getDirectGoogleDriveUrl=url=>{const fileIdMatch=url.match(/\\/d\\/([a-zA-Z0-9_-]+)/)||url.match(/id=([a-zA-Z0-9_-]+)/);if(fileIdMatch){return`https://drive.google.com/uc?export=download&id=${fileIdMatch[1]}`;}return url;};if(error)return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",color:\"red\"},children:[\"Error: \",error]});if(!isStudentIdEntered){return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",padding:\"20px\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Enter Student Information\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Student Number (required)\",value:studentNumber,onChange:e=>setStudentNumber(e.target.value),required:true,style:{marginBottom:\"10px\",width:\"200px\",padding:\"8px\",borderRadius:\"4px\",border:\"1px solid #ccc\"}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"First Name (English) (required)\",value:firstNameEnglish,onChange:e=>setFirstNameEnglish(e.target.value),required:true,style:{marginBottom:\"10px\",width:\"200px\",padding:\"8px\",borderRadius:\"4px\",border:\"1px solid #ccc\"}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Last Name (English) (required)\",value:lastNameEnglish,onChange:e=>setLastNameEnglish(e.target.value),required:true,style:{marginBottom:\"10px\",width:\"200px\",padding:\"8px\",borderRadius:\"4px\",border:\"1px solid #ccc\"}}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchQuiz,style:{width:\"200px\",padding:\"8px\",backgroundColor:\"#4CAF50\",color:\"white\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\"},children:\"Start Quiz\"})]});}if(!quiz)return/*#__PURE__*/_jsx(\"div\",{style:{textAlign:\"center\"},children:\"Loading...\"});return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",padding:\"20px\"},children:[/*#__PURE__*/_jsx(\"h1\",{style:{marginBottom:\"20px\"},children:quiz.title}),!submitted?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"20px\",fontSize:\"18px\",fontWeight:\"bold\"},children:[\"Time Left: \",formatTime(timeLeft)]}),quiz.questions.map(q=>/*#__PURE__*/_jsxs(\"div\",{style:{border:\"1px solid #ccc\",padding:\"10px\",marginBottom:\"10px\",width:\"100%\",maxWidth:\"600px\"},children:[/*#__PURE__*/_jsx(\"h3\",{children:q.question_text}),q.image_url&&/*#__PURE__*/_jsx(\"img\",{src:q.image_url.includes(\"drive.google.com\")?getDirectGoogleDriveUrl(q.image_url):q.image_url,alt:\"Question media\",style:{maxWidth:\"100%\"}}),q.audio_url&&/*#__PURE__*/_jsxs(\"audio\",{controls:true,children:[/*#__PURE__*/_jsx(\"source\",{src:q.audio_url.includes(\"drive.google.com\")?getDirectGoogleDriveUrl(q.audio_url):q.audio_url,type:\"audio/mpeg\"}),\"Your browser does not support the audio element.\"]}),q.video_url&&/*#__PURE__*/_jsxs(\"video\",{controls:true,style:{maxWidth:\"100%\"},children:[/*#__PURE__*/_jsx(\"source\",{src:q.video_url.includes(\"catbox.moe\")?q.video_url:getDirectGoogleDriveUrl(q.video_url)}),\"Your browser does not support the video element.\"]}),q.is_text_input?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:answers[q.id]||\"\",onChange:e=>handleTextInput(q.id,e.target.value),style:{width:\"100%\",padding:\"8px\",borderRadius:\"4px\",border:\"1px solid #ccc\"}}):/*#__PURE__*/_jsx(\"div\",{children:q.options.map((opt,index)=>{var _answers$q$id;const cleanOpt=opt.includes(\": \")?opt.split(\": \")[1].trim():opt.trim();return/*#__PURE__*/_jsxs(\"label\",{style:{display:\"block\",margin:\"5px 0\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:((_answers$q$id=answers[q.id])===null||_answers$q$id===void 0?void 0:_answers$q$id.includes(cleanOpt))||false,onChange:()=>handleCheckbox(q.id,opt)}),opt]},index);})})]},q.id)),/*#__PURE__*/_jsx(\"button\",{onClick:submitQuiz,style:{padding:\"8px 16px\",backgroundColor:\"#4CAF50\",color:\"white\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\"},children:\"Submit Quiz\"})]}):/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Quiz Submitted!\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your score: \",score,\"/\",total]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","axios","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","QuizApp","quiz","setQuiz","answers","setAnswers","studentNumber","setStudentNumber","firstNameEnglish","setFirstNameEnglish","lastNameEnglish","setLastNameEnglish","courseNumber","setCourseNumber","quizId","setQuizId","submitted","setSubmitted","error","setError","isStudentIdEntered","setIsStudentIdEntered","score","setScore","total","setTotal","timeLeft","setTimeLeft","urlParams","URLSearchParams","window","location","search","quizIdFromUrl","get","courseNum","fetchQuiz","url","parseInt","response","fetch","ok","errorText","text","Error","status","data","json","message","title","hasAudioOrVideo","questions","some","q","audio_url","video_url","initialTime","err","console","submitQuiz","timerId","setInterval","prev","clearInterval","handleTextInput","questionId","value","log","handleCheckbox","cleanValue","includes","split","trim","currentAnswers","Array","isArray","filter","ans","submitUrl","submission","student_number","first_name_english","last_name_english","course_number","Object","keys","reduce","acc","qId","post","_err$response","_err$response$data","detail","formatTime","seconds","minutes","Math","floor","secs","toString","padStart","getDirectGoogleDriveUrl","fileIdMatch","match","style","textAlign","color","children","display","flexDirection","alignItems","padding","type","placeholder","onChange","e","target","required","marginBottom","width","borderRadius","border","onClick","backgroundColor","cursor","fontSize","fontWeight","map","maxWidth","question_text","image_url","src","alt","controls","is_text_input","id","options","opt","index","_answers$q$id","cleanOpt","margin","checked"],"sources":["/Users/arlen/PycharmProjects/university tests/quiz-frontend-frontend/src/QuizApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function QuizApp() {\n    const [quiz, setQuiz] = useState(null);\n    const [answers, setAnswers] = useState({});\n    const [studentNumber, setStudentNumber] = useState(\"\");\n    const [firstNameEnglish, setFirstNameEnglish] = useState(\"\");\n    const [lastNameEnglish, setLastNameEnglish] = useState(\"\");\n    const [courseNumber, setCourseNumber] = useState(\"\");\n    const [quizId, setQuizId] = useState(null);\n    const [submitted, setSubmitted] = useState(false);\n    const [error, setError] = useState(null);\n    const [isStudentIdEntered, setIsStudentIdEntered] = useState(false);\n    const [score, setScore] = useState(null);\n    const [total, setTotal] = useState(null);\n    const [timeLeft, setTimeLeft] = useState(null);\n\n    useEffect(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        const quizIdFromUrl = urlParams.get(\"quizId\");\n        const courseNum = urlParams.get(\"courseNumber\");\n        if (quizIdFromUrl && courseNum) {\n            setQuizId(quizIdFromUrl);\n            setCourseNumber(courseNum);\n        }\n    }, []);\n\n    const fetchQuiz = async () => {\n        if (!studentNumber || !firstNameEnglish || !lastNameEnglish || !courseNumber || !quizId) {\n            setError(\"Please enter your student number, first name, last name, and ensure quiz parameters are provided.\");\n            return;\n        }\n        const url = `https://quiz-app-backend-jp.fly.dev/quiz/${parseInt(quizId)}?student_number=${studentNumber}&course_number=${courseNumber}`;\n        try {\n            const response = await fetch(url);\n            if (!response.ok) {\n                const errorText = await response.text();\n                throw new Error(`HTTP error! status: ${response.status}, details: ${errorText}`);\n            }\n            const data = await response.json();\n            if (data.message === \"You have already taken this quiz.\") {\n                setSubmitted(true);\n                setScore(data.score);\n                setTotal(data.total);\n                setIsStudentIdEntered(true);\n                setQuiz({ title: \"Quiz Already Taken\" });\n                return;\n            }\n            setQuiz(data);\n            setIsStudentIdEntered(true);\n            setError(null);\n\n            const hasAudioOrVideo = data.questions.some((q) => q.audio_url || q.video_url);\n            const initialTime = hasAudioOrVideo ? 10 * 60 : 5 * 60;\n            setTimeLeft(initialTime);\n        } catch (err) {\n            console.error(\"Error fetching quiz:\", err);\n            setError(err.message);\n        }\n    };\n\n    useEffect(() => {\n        if (timeLeft === null || submitted) return;\n        if (timeLeft <= 0) {\n            submitQuiz();\n            return;\n        }\n        const timerId = setInterval(() => setTimeLeft((prev) => prev - 1), 1000);\n        return () => clearInterval(timerId);\n    }, [timeLeft, submitted]);\n\n    const handleTextInput = (questionId, value) => {\n        console.log(`Q${questionId} - Text Input:`, value);\n        setAnswers((prev) => ({ ...prev, [questionId]: value }));\n    };\n\n    const handleCheckbox = (questionId, value) => {\n        const cleanValue = value.includes(\": \") ? value.split(\": \")[1].trim() : value.trim();\n        console.log(`Q${questionId} - Checkbox: Raw=${value}, Clean=${cleanValue}`);\n        setAnswers((prev) => {\n            const currentAnswers = Array.isArray(prev[questionId]) ? prev[questionId] : [];\n            if (currentAnswers.includes(cleanValue)) {\n                return { ...prev, [questionId]: currentAnswers.filter((ans) => ans !== cleanValue) };\n            } else {\n                return { ...prev, [questionId]: [...currentAnswers, cleanValue] };\n            }\n        });\n    };\n\n    const submitQuiz = async () => {\n        if (!studentNumber || !firstNameEnglish || !lastNameEnglish) {\n            setError(\"Student number, first name, and last name are required.\");\n            return;\n        }\n        const submitUrl = `https://quiz-app-backend-jp.fly.dev/submit_quiz/${parseInt(quizId)}`;\n        const submission = {\n            student_number: studentNumber,\n            first_name_english: firstNameEnglish,\n            last_name_english: lastNameEnglish,\n            course_number: courseNumber,\n            answers: Object.keys(answers).reduce((acc, qId) => {\n                acc[qId] =answers[qId];\n                return acc;\n            }, {})\n        };\n        try {\n            const response = await axios.post(submitUrl, submission);\n            setScore(response.data.score);\n            setTotal(response.data.total);\n            setSubmitted(true);\n            setError(null);\n        } catch (err) {\n            console.error(\"Error submitting quiz:\", err);\n            setError(err.response?.data?.detail || err.message);\n        }\n    };\n\n    const formatTime = (seconds) => {\n        const minutes = Math.floor(seconds / 60);\n        const secs = seconds % 60;\n        return `${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n    };\n\n    const getDirectGoogleDriveUrl = (url) => {\n        const fileIdMatch = url.match(/\\/d\\/([a-zA-Z0-9_-]+)/) || url.match(/id=([a-zA-Z0-9_-]+)/);\n        if (fileIdMatch) {\n            return `https://drive.google.com/uc?export=download&id=${fileIdMatch[1]}`;\n        }\n        return url;\n    };\n\n    if (error) return <div style={{ textAlign: \"center\", color: \"red\" }}>Error: {error}</div>;\n\n    if (!isStudentIdEntered) {\n        return (\n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", padding: \"20px\" }}>\n                <h1>Enter Student Information</h1>\n                <input\n                    type=\"text\"\n                    placeholder=\"Student Number (required)\"\n                    value={studentNumber}\n                    onChange={(e) => setStudentNumber(e.target.value)}\n                    required\n                    style={{\n                        marginBottom: \"10px\",\n                        width: \"200px\",\n                        padding: \"8px\",\n                        borderRadius: \"4px\",\n                        border: \"1px solid #ccc\",\n                    }}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"First Name (English) (required)\"\n                    value={firstNameEnglish}\n                    onChange={(e) => setFirstNameEnglish(e.target.value)}\n                    required\n                    style={{\n                        marginBottom: \"10px\",\n                        width: \"200px\",\n                        padding: \"8px\",\n                        borderRadius: \"4px\",\n                        border: \"1px solid #ccc\",\n                    }}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Last Name (English) (required)\"\n                    value={lastNameEnglish}\n                    onChange={(e) => setLastNameEnglish(e.target.value)}\n                    required\n                    style={{\n                        marginBottom: \"10px\",\n                        width: \"200px\",\n                        padding: \"8px\",\n                        borderRadius: \"4px\",\n                        border: \"1px solid #ccc\",\n                    }}\n                />\n                <button\n                    onClick={fetchQuiz}\n                    style={{\n                        width: \"200px\",\n                        padding: \"8px\",\n                        backgroundColor: \"#4CAF50\",\n                        color: \"white\",\n                        border: \"none\",\n                        borderRadius: \"4px\",\n                        cursor: \"pointer\",\n                    }}\n                >\n                    Start Quiz\n                </button>\n            </div>\n        );\n    }\n\n    if (!quiz) return <div style={{ textAlign: \"center\" }}>Loading...</div>;\n\n    return (\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", padding: \"20px\" }}>\n            <h1 style={{ marginBottom: \"20px\" }}>{quiz.title}</h1>\n            {!submitted ? (\n                <>\n                    <div style={{ marginBottom: \"20px\", fontSize: \"18px\", fontWeight: \"bold\" }}>\n                        Time Left: {formatTime(timeLeft)}\n                    </div>\n                    {quiz.questions.map((q) => (\n                        <div\n                            key={q.id}\n                            style={{\n                                border: \"1px solid #ccc\",\n                                padding: \"10px\",\n                                marginBottom: \"10px\",\n                                width: \"100%\",\n                                maxWidth: \"600px\",\n                            }}\n                        >\n                            <h3>{q.question_text}</h3>\n                            {q.image_url && (\n                                <img\n                                    src={\n                                        q.image_url.includes(\"drive.google.com\")\n                                            ? getDirectGoogleDriveUrl(q.image_url)\n                                            : q.image_url\n                                    }\n                                    alt=\"Question media\"\n                                    style={{ maxWidth: \"100%\" }}\n                                />\n                            )}\n                            {q.audio_url && (\n                                <audio controls>\n                                    <source\n                                        src={\n                                            q.audio_url.includes(\"drive.google.com\")\n                                                ? getDirectGoogleDriveUrl(q.audio_url)\n                                                : q.audio_url\n                                        }\n                                        type=\"audio/mpeg\"\n                                    />\n                                    Your browser does not support the audio element.\n                                </audio>\n                            )}\n                            {q.video_url && (\n                                <video controls style={{ maxWidth: \"100%\" }}>\n                                    <source\n                                        src={\n                                            q.video_url.includes(\"catbox.moe\")\n                                                ? q.video_url\n                                                : getDirectGoogleDriveUrl(q.video_url)\n                                        }\n                                    />\n                                    Your browser does not support the video element.\n                                </video>\n                            )}\n                            {q.is_text_input ? (\n                                <input\n                                    type=\"text\"\n                                    value={answers[q.id] || \"\"}\n                                    onChange={(e) => handleTextInput(q.id, e.target.value)}\n                                    style={{\n                                        width: \"100%\",\n                                        padding: \"8px\",\n                                        borderRadius: \"4px\",\n                                        border: \"1px solid #ccc\",\n                                    }}\n                                />\n                            ) : (\n                                <div>\n                                    {q.options.map((opt, index) => {\n                                        const cleanOpt = opt.includes(\": \")\n                                            ? opt.split(\": \")[1].trim()\n                                            : opt.trim();\n                                        return (\n                                            <label\n                                                key={index}\n                                                style={{ display: \"block\", margin: \"5px 0\" }}\n                                            >\n                                                <input\n                                                    type=\"checkbox\"\n                                                    checked={answers[q.id]?.includes(cleanOpt) || false}\n                                                    onChange={() => handleCheckbox(q.id, opt)}\n                                                />\n                                                {opt}\n                                            </label>\n                                        );\n                                    })}\n                                </div>\n                            )}\n                        </div>\n                    ))}\n                    <button\n                        onClick={submitQuiz}\n                        style={{\n                            padding: \"8px 16px\",\n                            backgroundColor: \"#4CAF50\",\n                            color: \"white\",\n                            border: \"none\",\n                            borderRadius: \"4px\",\n                            cursor: \"pointer\",\n                        }}\n                    >\n                        Submit Quiz\n                    </button>\n                </>\n            ) : (\n                <div style={{ textAlign: \"center\" }}>\n                    <h2>Quiz Submitted!</h2>\n                    <p>\n                        Your score: {score}/{total}\n                    </p>\n                </div>\n            )}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}